AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "SAM template for backend and related functions"

Metadata:
  Globals:
    Function:
      Tracing: Active
    Api:
      Cors: 
        AllowMethods: "'GET,POST,PUT,PATCH,DELETE,OPTIONS'"
        AllowHeaders: "'Accept-Encoding,Content-Encoding,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,Client-ID,key,secret,session'"
        AllowOrigin: "'*'"

Resources:
  # define api gateway
  ApiGatewayBackend:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prd
      Name: get_layers_api

  # define the Lambda function and its code
  CreateLayer39x86:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: easy-layers
        Key: functions/src/deployment_easy_layers.zip
      FunctionName: create_layer_easy_layers_39x86
      Handler: create_layer.lambda_handler
      Runtime: python3.9
      Architectures: 
        - x86_64
      Description: Creates & Checks If A Layer Exists When Someone Submits Python 3.9
      Timeout: 300
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayBackend
            Path: /create_layer39x86
            Method: post
      Layers:
        - arn:aws:lambda:us-east-1:737802338670:layer:jsonschema:1
        - arn:aws:lambda:us-east-1:737802338670:layer:requests-2-28-1:1
      Policies:
        Statement:
          - Effect: Allow
            Action: 
              - logs:CreateLogGroup
            Resource: arn:aws:logs:us-east-1:737802338670:*
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - arn:aws:logs:us-east-1:737802338670:log-group:/aws/lambda/*
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - lambda:ListFunctions
              - lambda:ListLayerVersions
              - lambda:ListLayers
            Resource: "*"
          - Sid: VisualEditor1
            Effect: Allow
            Action:
              - lambda:GetLayerVersion
              - lambda:DeleteLayerVersion
              - lambda:AddLayerVersionPermission
            Resource: "*"
          - Sid: VisualEditor2
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObjectAcl
              - s3:GetObject
              - logs:CreateLogStream
              - lambda:PublishLayerVersion
              - s3:ListBucket
              - logs:PutLogEvents
            Resource:
              - "*"
  # define the Lambda function and its code
  CreateLayer38x86:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: easy-layers
        Key: functions/src/deployment_easy_layers.zip
      FunctionName: create_layer_easy_layers_38x86
      Handler: create_layer.lambda_handler
      Runtime: python3.8
      Architectures: 
        - x86_64
      Description: Creates & Checks If A Layer Exists When Someone Submits Python 3.8
      Timeout: 300
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayBackend
            Path: /create_layer38x86
            Method: post
      Layers:
        - arn:aws:lambda:us-east-1:737802338670:layer:jsonschema-4-17-3:1
        - arn:aws:lambda:us-east-1:737802338670:layer:requests-2-28-1:1
      Policies:
        Statement:
          - Effect: Allow
            Action: 
              - logs:CreateLogGroup
            Resource: arn:aws:logs:us-east-1:737802338670:*
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - arn:aws:logs:us-east-1:737802338670:log-group:/aws/lambda/*
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - lambda:ListFunctions
              - lambda:ListLayerVersions
              - lambda:ListLayers
            Resource: "*"
          - Sid: VisualEditor1
            Effect: Allow
            Action:
              - lambda:GetLayerVersion
              - lambda:DeleteLayerVersion
              - lambda:AddLayerVersionPermission
            Resource: "*"
          - Sid: VisualEditor2
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObjectAcl
              - s3:GetObject
              - logs:CreateLogStream
              - lambda:PublishLayerVersion
              - s3:ListBucket
              - logs:PutLogEvents
            Resource:
              - "*"

  # define the Lambda function and its code
  CreateLayer39arm:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: easy-layers
        Key: functions/src/deployment_easy_layers.zip
      FunctionName: create_layer_easy_layers_39arm
      Handler: create_layer.lambda_handler
      Runtime: python3.9
      Architectures: 
        - arm64
      Description: Creates & Checks If A Layer Exists When Someone Submits Python 3.9
      Timeout: 300
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayBackend
            Path: /create_layer39arm
            Method: post
      Layers:
        - arn:aws:lambda:us-east-1:737802338670:layer:jsonschema:1
        - arn:aws:lambda:us-east-1:737802338670:layer:requests-2-28-1:1
      Policies:
        Statement:
          - Effect: Allow
            Action: 
              - logs:CreateLogGroup
            Resource: arn:aws:logs:us-east-1:737802338670:*
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - arn:aws:logs:us-east-1:737802338670:log-group:/aws/lambda/*
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - lambda:ListFunctions
              - lambda:ListLayerVersions
              - lambda:ListLayers
            Resource: "*"
          - Sid: VisualEditor1
            Effect: Allow
            Action:
              - lambda:GetLayerVersion
              - lambda:DeleteLayerVersion
              - lambda:AddLayerVersionPermission
            Resource: "*"
          - Sid: VisualEditor2
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObjectAcl
              - s3:GetObject
              - logs:CreateLogStream
              - lambda:PublishLayerVersion
              - s3:ListBucket
              - logs:PutLogEvents
            Resource:
              - "*"
  # define the Lambda function and its code
  CreateLayer38arm:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: easy-layers
        Key: functions/src/deployment_easy_layers.zip
      FunctionName: create_layer_easy_layers_38arm
      Handler: create_layer.lambda_handler
      Runtime: python3.8
      Architectures: 
        - arm64
      Description: Creates & Checks If A Layer Exists When Someone Submits Python 3.8
      Timeout: 300
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayBackend
            Path: /create_layer38arm
            Method: post
      Layers:
        - arn:aws:lambda:us-east-1:737802338670:layer:jsonschema-4-17-3:1
        - arn:aws:lambda:us-east-1:737802338670:layer:requests-2-28-1:1
      Policies:
        Statement:
          - Effect: Allow
            Action: 
              - logs:CreateLogGroup
            Resource: arn:aws:logs:us-east-1:737802338670:*
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - arn:aws:logs:us-east-1:737802338670:log-group:/aws/lambda/*
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - lambda:ListFunctions
              - lambda:ListLayerVersions
              - lambda:ListLayers
            Resource: "*"
          - Sid: VisualEditor1
            Effect: Allow
            Action:
              - lambda:GetLayerVersion
              - lambda:DeleteLayerVersion
              - lambda:AddLayerVersionPermission
            Resource: "*"
          - Sid: VisualEditor2
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObjectAcl
              - s3:GetObject
              - logs:CreateLogStream
              - lambda:PublishLayerVersion
              - s3:ListBucket
              - logs:PutLogEvents
            Resource:
              - "*"

  GetLayers:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: easy-layers
        Key: functions/src/deployment_easy_layers.zip
      Handler: get_layers.lambda_handler
      Runtime: python3.9
      FunctionName: get_layers_easy_layers
      Description: Grabs all the layers
      Timeout: 60
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayBackend
            Path: /get_layers
            Method: get 
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - lambda:GetLayerVersion
                - lambda:ListLayerVersions
                - lambda:ListLayers
              Resource: "*"
            - Sid: VisualEditor1
              Effect: Allow
              Action:
                - s3:ListBucket
                - logs:CreateLogGroup
              Resource:
                - arn:aws:s3:::easy-layers
                - arn:aws:logs:us-east-1:737802338670:*
            - Sid: VisualEditor2
              Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: arn:aws:logs:us-east-1:737802338670:log-group:/aws/lambda/easy_layers_get_layers:*